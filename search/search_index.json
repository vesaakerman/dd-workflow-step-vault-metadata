{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dd-workflow-step-vault-metadata \u00b6 Dataverse workflow step for setting DANS Data Vault metadata. SYNOPSIS \u00b6 dd-workflow-step-vault-metadata { server | check } DESCRIPTION \u00b6 This service implements a PrePublishDataset workflow step that sets DANS Data Vault metadata on the dataset-version about to be published. Vault metadata fields \u00b6 The following Vault metadata fields are set by this service. typeName value source V1.0 value source Vn, n < 1.0 dansDataversePid the dataset DOI the dataset DOI dansDataversePidVersion the dataset version number the dataset version number dansBagId a urn:uuid generated by this service a urn:uuid generated by this service dansNbn a urn:nbn generated by this service the urn:nbn minted for V1.0 ARGUMENTS \u00b6 positional arguments: {server,check} available commands named arguments: -h, --help show this help message and exit -v, --version show the application version and exit INSTALLATION AND CONFIGURATION \u00b6 Currently this project is built as an RPM package for RHEL7/CentOS7 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-workflow-step-vault-metadata and the configuration files to /etc/opt/dans.knaw.nl/dd-workflow-step-vault-metadata . To install the module on systems that do not support RPM, you can copy and unarchive the tarball to the target host. You will have to take care of placing the files in the correct locations for your system yourself. For instructions on building the tarball, see next section. Service configuration file \u00b6 The configuration options are documented with comments int the config.yml configuration file. Dataverse configuration \u00b6 To configure Dataverse to call this service, you must add it as an http/authext workflow step to the default PrePublishDataset workflow. The JSON to use in the step is included in INSTALL_DIR/install/workflow-step.json . BUILDING FROM SOURCE \u00b6 Prerequisites: Java 8 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/dd-workflow-step-vault-metadata.git cd dd-workflow-step-vault-metadata mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"Manual"},{"location":"#dd-workflow-step-vault-metadata","text":"Dataverse workflow step for setting DANS Data Vault metadata.","title":"dd-workflow-step-vault-metadata"},{"location":"#synopsis","text":"dd-workflow-step-vault-metadata { server | check }","title":"SYNOPSIS"},{"location":"#description","text":"This service implements a PrePublishDataset workflow step that sets DANS Data Vault metadata on the dataset-version about to be published.","title":"DESCRIPTION"},{"location":"#vault-metadata-fields","text":"The following Vault metadata fields are set by this service. typeName value source V1.0 value source Vn, n < 1.0 dansDataversePid the dataset DOI the dataset DOI dansDataversePidVersion the dataset version number the dataset version number dansBagId a urn:uuid generated by this service a urn:uuid generated by this service dansNbn a urn:nbn generated by this service the urn:nbn minted for V1.0","title":"Vault metadata fields"},{"location":"#arguments","text":"positional arguments: {server,check} available commands named arguments: -h, --help show this help message and exit -v, --version show the application version and exit","title":"ARGUMENTS"},{"location":"#installation-and-configuration","text":"Currently this project is built as an RPM package for RHEL7/CentOS7 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-workflow-step-vault-metadata and the configuration files to /etc/opt/dans.knaw.nl/dd-workflow-step-vault-metadata . To install the module on systems that do not support RPM, you can copy and unarchive the tarball to the target host. You will have to take care of placing the files in the correct locations for your system yourself. For instructions on building the tarball, see next section.","title":"INSTALLATION AND CONFIGURATION"},{"location":"#service-configuration-file","text":"The configuration options are documented with comments int the config.yml configuration file.","title":"Service configuration file"},{"location":"#dataverse-configuration","text":"To configure Dataverse to call this service, you must add it as an http/authext workflow step to the default PrePublishDataset workflow. The JSON to use in the step is included in INSTALL_DIR/install/workflow-step.json .","title":"Dataverse configuration"},{"location":"#building-from-source","text":"Prerequisites: Java 8 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/dd-workflow-step-vault-metadata.git cd dd-workflow-step-vault-metadata mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"BUILDING FROM SOURCE"}]}